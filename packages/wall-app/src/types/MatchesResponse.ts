// Generated by https://quicktype.io

export interface MatchesResponse {
    matches: Matches;
}

export interface Matches {
    "-xmlns":              string;
    "-xmlns:xsi":          string;
    "-xsi:schemaLocation": string;
    match:                 Match[];
}

export interface Match {
    id:                      string;
    uuid:                    string;
    number:                  string;
    date:                    string;
    time:                    string;
    delayPossible:           string;
    decidingMatch:           string;
    indefinitelyRescheduled: string;
    host:                    Host;
    team:                    Team[];
    matchSeries:             MatchSeries;
    location:                Location;
    referees?:               Referees;
}

export interface Host {
    id:    string;
    uuid:  string;
    name:  string;
    club?: string;
}

export interface Location {
    id:         string;
    name:       string;
    street:     string;
    extraField: ExtraField;
    postalCode: string;
    city:       string;
    note:       ExtraField;
}

export enum ExtraField {
    Empty = "-",
}

export interface MatchSeries {
    id:               string;
    uuid:             string;
    allSeasonId:      string;
    name:             MatchSeriesName;
    shortName:        MatchSeriesShortName;
    type:             MatchSeriesType;
    updated:          string;
    structureUpdated: string;
    resultsUpdated:   string;
    season:           Host;
    hierarchy:        Hierarchy;
    fullHierarchy:    FullHierarchy;
    association:      Association;
}

export interface Association {
    name:      AssociationName;
    shortName: AssociationShortName;
}

export enum AssociationName {
    Bereich2BLSüd = "Bereich 2.BL Süd",
    DeutscherVolleyballVerband = "Deutscher Volleyball-Verband",
    DritteLiga = "Dritte Liga",
    DritteLigaSüd = "Dritte Liga Süd",
}

export enum AssociationShortName {
    DLS = "DL S",
}

export interface FullHierarchy {
    hierarchy: Hierarchy[];
}

export interface Hierarchy {
    id:             string;
    name:           AssociationName;
    shortName:      HierarchyShortName;
    hierarchyLevel: string;
    uuid?:          string;
}

export enum HierarchyShortName {
    DL = "DL",
    Dls = "DLS",
    Dvv = "DVV",
    Süd = "Süd",
}

export enum MatchSeriesName {
    DritteLigaSüdMänner = "Dritte Liga Süd Männer",
}

export enum MatchSeriesShortName {
    DlsM = "DLS M",
}

export enum MatchSeriesType {
    League = "League",
}

export interface Referees {
    referee: Referee[];
}

export interface Referee {
    type:      RefereeType;
    id:        string;
    lastname:  string;
    firstname: string;
    city:      string;
    sex:       Sex;
}

export enum Sex {
    Männlich = "männlich",
    Weiblich = "weiblich",
}

export enum RefereeType {
    Beobachter = "Beobachter",
    The1Schiedsrichter = "1. Schiedsrichter",
    The2Schiedsrichter = "2. Schiedsrichter",
}

export interface Team {
    number:       string;
    id:           string;
    uuid:         string;
    seasonTeamId: string;
    name:         string;
    shortName:    string;
    clubCode:     string;
    club:         Club;
}

export interface Club {
    name: string;
}
